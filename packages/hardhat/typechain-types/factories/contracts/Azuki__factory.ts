/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../../common'
import type { Azuki, AzukiInterface } from '../../contracts/Azuki'

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'ApprovalCallerNotOwnerNorApproved',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ApprovalQueryForNonexistentToken',
    type: 'error',
  },
  {
    inputs: [],
    name: 'BalanceQueryForZeroAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'MintERC2309QuantityExceedsLimit',
    type: 'error',
  },
  {
    inputs: [],
    name: 'MintToZeroAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'MintZeroQuantity',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OwnerQueryForNonexistentToken',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OwnershipNotInitializedForExtraData',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TransferCallerNotOwnerNorApproved',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TransferFromIncorrectOwner',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TransferToNonERC721ReceiverImplementer',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TransferToZeroAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'URIQueryForNonexistentToken',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'approved',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'bool',
        name: 'approved',
        type: 'bool',
      },
    ],
    name: 'ApprovalForAll',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'fromTokenId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'toTokenId',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
    ],
    name: 'ConsecutiveTransfer',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [],
    name: 'MAX_PUBLIC_MINT',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'MAX_SUPPLY',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'PRICE_PER_TOKEN',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'PROVENANCE',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'addr',
        type: 'address',
      },
    ],
    name: 'allowlistMintAmount',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'contractURI',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'getApproved',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isAllowlistSaleActive',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'isApprovedForAll',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isSaleActive',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint8',
        name: 'numberOfTokens',
        type: 'uint8',
      },
    ],
    name: 'mint',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint8',
        name: 'numberOfTokens',
        type: 'uint8',
      },
    ],
    name: 'mintAllowlisted',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'ownerOf',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '_data',
        type: 'bytes',
      },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'addresses',
        type: 'address[]',
      },
      {
        internalType: 'uint8',
        name: 'numAllowedToMint',
        type: 'uint8',
      },
    ],
    name: 'setAllowlistAddresses',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'approved',
        type: 'bool',
      },
    ],
    name: 'setApprovalForAll',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'baseURI_',
        type: 'string',
      },
    ],
    name: 'setBaseURI',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'contractUri_',
        type: 'string',
      },
    ],
    name: 'setContractURI',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: 'isActive',
        type: 'bool',
      },
    ],
    name: 'setIsAllowlistSaleActive',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: 'isActive',
        type: 'bool',
      },
    ],
    name: 'setIsSaleActive',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'provenance',
        type: 'string',
      },
    ],
    name: 'setProvenance',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'tokenURI',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'withdrawAll',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]

const _bytecode =
  '0x6080604052600c805461ffff191690553480156200001c57600080fd5b50604080518082018252600d81526c417274696666696e6544656d6f60981b60208083019182528351808501909452600584526420a92a24a360d91b9084015281519192916200006f91600291620000ef565b50805162000085906003906020840190620000ef565b5050600080555062000097336200009d565b620001d2565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000fd9062000195565b90600052602060002090601f0160209004810192826200012157600085556200016c565b82601f106200013c57805160ff19168380011785556200016c565b828001600101855582156200016c579182015b828111156200016c5782518255916020019190600101906200014f565b506200017a9291506200017e565b5090565b5b808211156200017a57600081556001016200017f565b600181811c90821680620001aa57607f821691505b60208210811415620001cc57634e487b7160e01b600052602260045260246000fd5b50919050565b611e5f80620001e26000396000f3fe6080604052600436106102185760003560e01c806370a082311161011d578063a22cb465116100b0578063d2d65ff51161007f578063e985e9c511610064578063e985e9c5146105b3578063f2fde38b146105fc578063ffe630b51461061c57600080fd5b8063d2d65ff51461057e578063e8a3d4851461059e57600080fd5b8063a22cb4651461050b578063b3485d8d1461052b578063b88d4fde1461054b578063c87b56dd1461055e57600080fd5b8063853828b6116100ec578063853828b6146104a35780638da5cb5b146104b8578063938e3d7b146104d657806395d89b41146104f657600080fd5b806370a0823114610434578063715018a6146104545780637b6cba5c14610469578063833b94991461048957600080fd5b806332cb6b0c116101b0578063564566a81161017f5780636373a6b1116101645780636373a6b1146103f757806365f130971461040c5780636ecd23061461042157600080fd5b8063564566a8146103bd5780636352211e146103d757600080fd5b806332cb6b0c1461036157806342842e0e146103775780634acde4d11461038a57806355f804b31461039d57600080fd5b8063095ea7b3116101ec578063095ea7b3146102cb57806318160ddd146102e057806323b872dd1461030357806325a466f41461031657600080fd5b806210f81e1461021d57806301ffc9a71461025157806306fdde0314610271578063081812fc14610293575b600080fd5b34801561022957600080fd5b50600c5461023c90610100900460ff1681565b60405190151581526020015b60405180910390f35b34801561025d57600080fd5b5061023c61026c3660046118f9565b61063c565b34801561027d57600080fd5b506102866106d9565b604051610248919061196e565b34801561029f57600080fd5b506102b36102ae366004611981565b61076b565b6040516001600160a01b039091168152602001610248565b6102de6102d93660046119b6565b6107c8565b005b3480156102ec57600080fd5b50600154600054035b604051908152602001610248565b6102de6103113660046119e0565b61088e565b34801561032257600080fd5b5061034f610331366004611a1c565b6001600160a01b03166000908152600d602052604090205460ff1690565b60405160ff9091168152602001610248565b34801561036d57600080fd5b506102f56103e881565b6102de6103853660046119e0565b610a6b565b6102de610398366004611a48565b610a8b565b3480156103a957600080fd5b506102de6103b8366004611aef565b610c90565b3480156103c957600080fd5b50600c5461023c9060ff1681565b3480156103e357600080fd5b506102b36103f2366004611981565b610cab565b34801561040357600080fd5b50610286610cb6565b34801561041857600080fd5b506102f5600a81565b6102de61042f366004611a48565b610d44565b34801561044057600080fd5b506102f561044f366004611a1c565b610eef565b34801561046057600080fd5b506102de610f57565b34801561047557600080fd5b506102de610484366004611b48565b610f6b565b34801561049557600080fd5b506102f5655af3107a400081565b3480156104af57600080fd5b506102de610f8d565b3480156104c457600080fd5b506008546001600160a01b03166102b3565b3480156104e257600080fd5b506102de6104f1366004611aef565b611001565b34801561050257600080fd5b5061028661101c565b34801561051757600080fd5b506102de610526366004611b63565b61102b565b34801561053757600080fd5b506102de610546366004611b96565b611097565b6102de610559366004611c1a565b61111f565b34801561056a57600080fd5b50610286610579366004611981565b611163565b34801561058a57600080fd5b506102de610599366004611b48565b611201565b3480156105aa57600080fd5b5061028661121c565b3480156105bf57600080fd5b5061023c6105ce366004611c96565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b34801561060857600080fd5b506102de610617366004611a1c565b611229565b34801561062857600080fd5b506102de610637366004611aef565b6112b6565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316148061069f57507f80ac58cd000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b806106d357507f5b5e139f000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b6060600280546106e890611cc0565b80601f016020809104026020016040519081016040528092919081815260200182805461071490611cc0565b80156107615780601f1061073657610100808354040283529160200191610761565b820191906000526020600020905b81548152906001019060200180831161074457829003601f168201915b5050505050905090565b6000610776826112d1565b6107ac576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b60006107d382610cab565b9050336001600160a01b03821614610825576107ef81336105ce565b610825576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082815260066020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000610899826112f8565b9050836001600160a01b0316816001600160a01b0316146108e6576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008281526006602052604090208054338082146001600160a01b0388169091141761094c5761091686336105ce565b61094c576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b03851661098c576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b801561099757600082555b6001600160a01b038681166000908152600560205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260046020526040902055600160e11b8316610a225760018401600081815260046020526040902054610a20576000548114610a205760008181526004602052604090208490555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b610a868383836040518060200160405280600081525061111f565b505050565b6000610a9a6001546000540390565b600c54909150610100900460ff16610af95760405162461bcd60e51b815260206004820152601c60248201527f416c6c6f776c6973742073616c65206973206e6f74206163746976650000000060448201526064015b60405180910390fd5b336000908152600d602052604090205460ff9081169083161115610b855760405162461bcd60e51b815260206004820152602260248201527f4578636565646564206d617820617661696c61626c6520746f2070757263686160448201527f73650000000000000000000000000000000000000000000000000000000000006064820152608401610af0565b6103e8610b9560ff841683611d11565b1115610be35760405162461bcd60e51b815260206004820181905260248201527f507572636861736520776f756c6420657863656564206d617820746f6b656e736044820152606401610af0565b34610bf760ff8416655af3107a4000611d29565b1115610c455760405162461bcd60e51b815260206004820152601f60248201527f45746865722076616c75652073656e74206973206e6f7420636f7272656374006044820152606401610af0565b336000908152600d602052604081208054849290610c6790849060ff16611d48565b92506101000a81548160ff021916908360ff160217905550610c8c338360ff16611372565b5050565b610c9861138c565b8051610c8c90600990602084019061184a565b60006106d3826112f8565b600a8054610cc390611cc0565b80601f0160208091040260200160405190810160405280929190818152602001828054610cef90611cc0565b8015610d3c5780601f10610d1157610100808354040283529160200191610d3c565b820191906000526020600020905b815481529060010190602001808311610d1f57829003601f168201915b505050505081565b6000610d536001546000540390565b600c5490915060ff16610dce5760405162461bcd60e51b815260206004820152602260248201527f53616c65206d7573742062652061637469766520746f206d696e7420746f6b6560448201527f6e730000000000000000000000000000000000000000000000000000000000006064820152608401610af0565b600a8260ff161115610e225760405162461bcd60e51b815260206004820152601b60248201527f4578636565646564206d617820746f6b656e20707572636861736500000000006044820152606401610af0565b6103e8610e3260ff841683611d11565b1115610e805760405162461bcd60e51b815260206004820181905260248201527f507572636861736520776f756c6420657863656564206d617820746f6b656e736044820152606401610af0565b34610e9460ff8416655af3107a4000611d29565b1115610ee25760405162461bcd60e51b815260206004820152601f60248201527f45746865722076616c75652073656e74206973206e6f7420636f7272656374006044820152606401610af0565b610c8c338360ff16611372565b60006001600160a01b038216610f31576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b610f5f61138c565b610f6960006113e6565b565b610f7361138c565b600c80549115156101000261ff0019909216919091179055565b610f9561138c565b4780610fe35760405162461bcd60e51b815260206004820152601c60248201527f436f6e74726163742062616c616e6365206d757374206265203e2030000000006044820152606401610af0565b610ffe610ff86008546001600160a01b031690565b47611445565b50565b61100961138c565b8051610c8c90600b90602084019061184a565b6060600380546106e890611cc0565b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61109f61138c565b60005b60ff81168311156111195781600d600086868560ff168181106110c7576110c7611d6b565b90506020020160208101906110dc9190611a1c565b6001600160a01b031681526020810191909152604001600020805460ff191660ff929092169190911790558061111181611d81565b9150506110a2565b50505050565b61112a84848461088e565b6001600160a01b0383163b15611119576111468484848461155e565b611119576040516368d2bf6b60e11b815260040160405180910390fd5b606061116e826112d1565b6111a4576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006111ae611656565b90508051600014156111cf57604051806020016040528060008152506111fa565b806111d984611665565b6040516020016111ea929190611da1565b6040516020818303038152906040525b9392505050565b61120961138c565b600c805460ff1916911515919091179055565b600b8054610cc390611cc0565b61123161138c565b6001600160a01b0381166112ad5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610af0565b610ffe816113e6565b6112be61138c565b8051610c8c90600a90602084019061184a565b60008054821080156106d3575050600090815260046020526040902054600160e01b161590565b60008160005481101561134057600081815260046020526040902054600160e01b811661133e575b806111fa575060001901600081815260046020526040902054611320565b505b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610c8c8282604051806020016040528060008152506116b3565b6008546001600160a01b03163314610f695760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610af0565b600880546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b804710156114bb5760405162461bcd60e51b815260206004820152602360248201527f436f6e74726163742062616c616e6365206d757374206265203e3d205f616d6f60448201527f756e7400000000000000000000000000000000000000000000000000000000006064820152608401610af0565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114611508576040519150601f19603f3d011682016040523d82523d6000602084013e61150d565b606091505b5050905080610a865760405162461bcd60e51b815260206004820152601060248201527f5472616e73666572206661696c65642e000000000000000000000000000000006044820152606401610af0565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290611593903390899088908890600401611dd0565b602060405180830381600087803b1580156115ad57600080fd5b505af19250505080156115dd575060408051601f3d908101601f191682019092526115da91810190611e0c565b60015b611638573d80801561160b576040519150601f19603f3d011682016040523d82523d6000602084013e611610565b606091505b508051611630576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b6060600980546106e890611cc0565b606060a06040510180604052602081039150506000815280825b600183039250600a81066030018353600a90048061169c576116a1565b61167f565b50819003601f19909101908152919050565b6116bd8383611720565b6001600160a01b0383163b15610a86576000548281035b6116e7600086838060010194508661155e565b611704576040516368d2bf6b60e11b815260040160405180910390fd5b8181106116d457816000541461171957600080fd5b5050505050565b6000548161175a576040517fb562e8dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b03831660008181526005602090815260408083208054680100000000000000018802019055848352600490915281206001851460e11b4260a01b178317905582840190839083907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4600183015b81811461180957808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a46001016117d1565b5081611841576040517f2e07630000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005550505050565b82805461185690611cc0565b90600052602060002090601f01602090048101928261187857600085556118be565b82601f1061189157805160ff19168380011785556118be565b828001600101855582156118be579182015b828111156118be5782518255916020019190600101906118a3565b506118ca9291506118ce565b5090565b5b808211156118ca57600081556001016118cf565b6001600160e01b031981168114610ffe57600080fd5b60006020828403121561190b57600080fd5b81356111fa816118e3565b60005b83811015611931578181015183820152602001611919565b838111156111195750506000910152565b6000815180845261195a816020860160208601611916565b601f01601f19169290920160200192915050565b6020815260006111fa6020830184611942565b60006020828403121561199357600080fd5b5035919050565b80356001600160a01b03811681146119b157600080fd5b919050565b600080604083850312156119c957600080fd5b6119d28361199a565b946020939093013593505050565b6000806000606084860312156119f557600080fd5b6119fe8461199a565b9250611a0c6020850161199a565b9150604084013590509250925092565b600060208284031215611a2e57600080fd5b6111fa8261199a565b803560ff811681146119b157600080fd5b600060208284031215611a5a57600080fd5b6111fa82611a37565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611a9457611a94611a63565b604051601f8501601f19908116603f01168101908282118183101715611abc57611abc611a63565b81604052809350858152868686011115611ad557600080fd5b858560208301376000602087830101525050509392505050565b600060208284031215611b0157600080fd5b813567ffffffffffffffff811115611b1857600080fd5b8201601f81018413611b2957600080fd5b61164e84823560208401611a79565b803580151581146119b157600080fd5b600060208284031215611b5a57600080fd5b6111fa82611b38565b60008060408385031215611b7657600080fd5b611b7f8361199a565b9150611b8d60208401611b38565b90509250929050565b600080600060408486031215611bab57600080fd5b833567ffffffffffffffff80821115611bc357600080fd5b818601915086601f830112611bd757600080fd5b813581811115611be657600080fd5b8760208260051b8501011115611bfb57600080fd5b602092830195509350611c119186019050611a37565b90509250925092565b60008060008060808587031215611c3057600080fd5b611c398561199a565b9350611c476020860161199a565b925060408501359150606085013567ffffffffffffffff811115611c6a57600080fd5b8501601f81018713611c7b57600080fd5b611c8a87823560208401611a79565b91505092959194509250565b60008060408385031215611ca957600080fd5b611cb28361199a565b9150611b8d6020840161199a565b600181811c90821680611cd457607f821691505b60208210811415611cf557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611d2457611d24611cfb565b500190565b6000816000190483118215151615611d4357611d43611cfb565b500290565b600060ff821660ff841680821015611d6257611d62611cfb565b90039392505050565b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff811415611d9857611d98611cfb565b60010192915050565b60008351611db3818460208801611916565b835190830190611dc7818360208801611916565b01949350505050565b60006001600160a01b03808716835280861660208401525083604083015260806060830152611e026080830184611942565b9695505050505050565b600060208284031215611e1e57600080fd5b81516111fa816118e356fea26469706673582212208efae037608e8225b3e77660524bacaacc265d7c5caf7fcc1226d7fd9ff2e35964736f6c63430008090033'

type AzukiConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: AzukiConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class Azuki__factory extends ContractFactory {
  constructor(...args: AzukiConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Azuki> {
    return super.deploy(overrides || {}) as Promise<Azuki>
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  override attach(address: string): Azuki {
    return super.attach(address) as Azuki
  }
  override connect(signer: Signer): Azuki__factory {
    return super.connect(signer) as Azuki__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): AzukiInterface {
    return new utils.Interface(_abi) as AzukiInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Azuki {
    return new Contract(address, _abi, signerOrProvider) as Azuki
  }
}
