/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../../../common'
import type {
  NFTContractBase,
  NFTContractBaseInterface,
} from '../../../contracts/interfaces/NFTContractBase'

const _abi = [
  {
    inputs: [
      {
        internalType: 'string',
        name: 'name',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'symbol',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'maxSupply',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'maxPublicMint',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'pricePerToken',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'approved',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'bool',
        name: 'approved',
        type: 'bool',
      },
    ],
    name: 'ApprovalForAll',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [],
    name: 'MAX_PUBLIC_MINT',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'MAX_SUPPLY',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'PRICE_PER_TOKEN',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'PROVENANCE',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'contractURI',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'getApproved',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'isApprovedForAll',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isSaleActive',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint8',
        name: 'numberOfTokens',
        type: 'uint8',
      },
    ],
    name: 'mint',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'ownerOf',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_tokenId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_salePrice',
        type: 'uint256',
      },
    ],
    name: 'royaltyInfo',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'approved',
        type: 'bool',
      },
    ],
    name: 'setApprovalForAll',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'baseURI_',
        type: 'string',
      },
    ],
    name: 'setBaseURI',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'contractUri_',
        type: 'string',
      },
    ],
    name: 'setContractURI',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'recipient',
        type: 'address',
      },
      {
        internalType: 'uint96',
        name: 'fraction',
        type: 'uint96',
      },
    ],
    name: 'setDefaultRoyalty',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: 'isActive',
        type: 'bool',
      },
    ],
    name: 'setIsSaleActive',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'provenance',
        type: 'string',
      },
    ],
    name: 'setProvenance',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
    ],
    name: 'tokenByIndex',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
    ],
    name: 'tokenOfOwnerByIndex',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'tokenURI',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'withdrawAll',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]

const _bytecode =
  '0x60806040526010805460ff191690553480156200001b57600080fd5b5060405162002b8638038062002b868339810160408190526200003e9162000268565b84518590859062000057906002906020850190620000f5565b5080516200006d906003906020840190620000f5565b5050506200008a620000846200009f60201b60201c565b620000a3565b601192909255601255601355506200032a9050565b3390565b600c80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200010390620002ed565b90600052602060002090601f01602090048101928262000127576000855562000172565b82601f106200014257805160ff191683800117855562000172565b8280016001018555821562000172579182015b828111156200017257825182559160200191906001019062000155565b506200018092915062000184565b5090565b5b8082111562000180576000815560010162000185565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001c357600080fd5b81516001600160401b0380821115620001e057620001e06200019b565b604051601f8301601f19908116603f011681019082821181831017156200020b576200020b6200019b565b816040528381526020925086838588010111156200022857600080fd5b600091505b838210156200024c57858201830151818301840152908201906200022d565b838211156200025e5760008385830101525b9695505050505050565b600080600080600060a086880312156200028157600080fd5b85516001600160401b03808211156200029957600080fd5b620002a789838a01620001b1565b96506020880151915080821115620002be57600080fd5b50620002cd88828901620001b1565b60408801516060890151608090990151979a919950979695509350505050565b600181811c908216806200030257607f821691505b602082108114156200032457634e487b7160e01b600052602260045260246000fd5b50919050565b61284c806200033a6000396000f3fe6080604052600436106101fe5760003560e01c806365f130971161011d57806395d89b41116100b0578063d2d65ff51161007f578063e985e9c511610064578063e985e9c5146105a8578063f2fde38b146105f1578063ffe630b51461061157600080fd5b8063d2d65ff514610573578063e8a3d4851461059357600080fd5b806395d89b41146104fe578063a22cb46514610513578063b88d4fde14610533578063c87b56dd1461055357600080fd5b8063833b9499116100ec578063833b949914610495578063853828b6146104ab5780638da5cb5b146104c0578063938e3d7b146104de57600080fd5b806365f13097146104375780636ecd23061461044d57806370a0823114610460578063715018a61461048057600080fd5b80632f745c591161019557806355f804b31161016457806355f804b3146103c8578063564566a8146103e85780636352211e146104025780636373a6b11461042257600080fd5b80632f745c591461035257806332cb6b0c1461037257806342842e0e146103885780634f6ccce7146103a857600080fd5b8063095ea7b3116101d1578063095ea7b3146102b457806318160ddd146102d457806323b872dd146102f35780632a55205a1461031357600080fd5b806301ffc9a71461020357806304634d8d1461023857806306fdde031461025a578063081812fc1461027c575b600080fd5b34801561020f57600080fd5b5061022361021e3660046122dd565b610631565b60405190151581526020015b60405180910390f35b34801561024457600080fd5b50610258610253366004612316565b610642565b005b34801561026657600080fd5b5061026f610650565b60405161022f91906123b6565b34801561028857600080fd5b5061029c6102973660046123c9565b6106e2565b6040516001600160a01b03909116815260200161022f565b3480156102c057600080fd5b506102586102cf3660046123e2565b610709565b3480156102e057600080fd5b50600a545b60405190815260200161022f565b3480156102ff57600080fd5b5061025861030e36600461240c565b610840565b34801561031f57600080fd5b5061033361032e366004612448565b6108b7565b604080516001600160a01b03909316835260208301919091520161022f565b34801561035e57600080fd5b506102e561036d3660046123e2565b610972565b34801561037e57600080fd5b506102e560115481565b34801561039457600080fd5b506102586103a336600461240c565b610a1a565b3480156103b457600080fd5b506102e56103c33660046123c9565b610a35565b3480156103d457600080fd5b506102586103e33660046124f6565b610ad9565b3480156103f457600080fd5b506010546102239060ff1681565b34801561040e57600080fd5b5061029c61041d3660046123c9565b610af4565b34801561042e57600080fd5b5061026f610b59565b34801561044357600080fd5b506102e560125481565b61025861045b36600461253f565b610be7565b34801561046c57600080fd5b506102e561047b366004612562565b610db9565b34801561048c57600080fd5b50610258610e53565b3480156104a157600080fd5b506102e560135481565b3480156104b757600080fd5b50610258610e67565b3480156104cc57600080fd5b50600c546001600160a01b031661029c565b3480156104ea57600080fd5b506102586104f93660046124f6565b610edb565b34801561050a57600080fd5b5061026f610ef6565b34801561051f57600080fd5b5061025861052e36600461258d565b610f05565b34801561053f57600080fd5b5061025861054e3660046125c0565b610f10565b34801561055f57600080fd5b5061026f61056e3660046123c9565b610f8e565b34801561057f57600080fd5b5061025861058e36600461263c565b610ff5565b34801561059f57600080fd5b5061026f611010565b3480156105b457600080fd5b506102236105c3366004612657565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b3480156105fd57600080fd5b5061025861060c366004612562565b61101d565b34801561061d57600080fd5b5061025861062c3660046124f6565b6110aa565b600061063c826110c5565b92915050565b61064c82826110d0565b5050565b60606002805461065f90612681565b80601f016020809104026020016040519081016040528092919081815260200182805461068b90612681565b80156106d85780601f106106ad576101008083540402835291602001916106d8565b820191906000526020600020905b8154815290600101906020018083116106bb57829003601f168201915b5050505050905090565b60006106ed826111ea565b506000908152600660205260409020546001600160a01b031690565b600061071482610af4565b9050806001600160a01b0316836001600160a01b031614156107a35760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b336001600160a01b03821614806107bf57506107bf81336105c3565b6108315760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161079a565b61083b838361124e565b505050565b61084a33826112c9565b6108ac5760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b606482015260840161079a565b61083b838383611348565b60008281526001602090815260408083208151808301909252546001600160a01b038116808352600160a01b9091046bffffffffffffffffffffffff169282019290925282916109365750604080518082019091526000546001600160a01b0381168252600160a01b90046bffffffffffffffffffffffff1660208201525b60208101516000906127109061095a906bffffffffffffffffffffffff16876126d2565b61096491906126f1565b915196919550909350505050565b600061097d83610db9565b82106109f15760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201527f74206f6620626f756e6473000000000000000000000000000000000000000000606482015260840161079a565b506001600160a01b03919091166000908152600860209081526040808320938352929052205490565b61083b83838360405180602001604052806000815250610f10565b6000610a40600a5490565b8210610ab45760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201527f7574206f6620626f756e64730000000000000000000000000000000000000000606482015260840161079a565b600a8281548110610ac757610ac7612713565b90600052602060002001549050919050565b610ae161155b565b805161064c90600d90602084019061222e565b6000818152600460205260408120546001600160a01b03168061063c5760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e2049440000000000000000604482015260640161079a565b600e8054610b6690612681565b80601f0160208091040260200160405190810160405280929190818152602001828054610b9290612681565b8015610bdf5780601f10610bb457610100808354040283529160200191610bdf565b820191906000526020600020905b815481529060010190602001808311610bc257829003601f168201915b505050505081565b6000610bf2600a5490565b60105490915060ff16610c6d5760405162461bcd60e51b815260206004820152602260248201527f53616c65206d7573742062652061637469766520746f206d696e7420746f6b6560448201527f6e73000000000000000000000000000000000000000000000000000000000000606482015260840161079a565b6012548260ff161115610cc25760405162461bcd60e51b815260206004820152601b60248201527f4578636565646564206d617820746f6b656e2070757263686173650000000000604482015260640161079a565b601154610cd260ff841683612729565b1115610d205760405162461bcd60e51b815260206004820181905260248201527f507572636861736520776f756c6420657863656564206d617820746f6b656e73604482015260640161079a565b348260ff16601354610d3291906126d2565b1115610d805760405162461bcd60e51b815260206004820152601f60248201527f45746865722076616c75652073656e74206973206e6f7420636f727265637400604482015260640161079a565b60005b8260ff168160ff16101561083b57610da733610da260ff841685612729565b6115b5565b80610db181612741565b915050610d83565b60006001600160a01b038216610e375760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e65720000000000000000000000000000000000000000000000606482015260840161079a565b506001600160a01b031660009081526005602052604090205490565b610e5b61155b565b610e6560006115cf565b565b610e6f61155b565b4780610ebd5760405162461bcd60e51b815260206004820152601c60248201527f436f6e74726163742062616c616e6365206d757374206265203e203000000000604482015260640161079a565b610ed8610ed2600c546001600160a01b031690565b4761162e565b50565b610ee361155b565b805161064c90600f90602084019061222e565b60606003805461065f90612681565b61064c338383611747565b610f1a33836112c9565b610f7c5760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b606482015260840161079a565b610f8884848484611816565b50505050565b6060610f99826111ea565b6000610fa3611894565b90506000815111610fc35760405180602001604052806000815250610fee565b80610fcd846118a3565b604051602001610fde929190612761565b6040516020818303038152906040525b9392505050565b610ffd61155b565b6010805460ff1916911515919091179055565b600f8054610b6690612681565b61102561155b565b6001600160a01b0381166110a15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161079a565b610ed8816115cf565b6110b261155b565b805161064c90600e90602084019061222e565b600061063c8261194d565b6127106bffffffffffffffffffffffff821611156111565760405162461bcd60e51b815260206004820152602a60248201527f455243323938313a20726f79616c7479206665652077696c6c2065786365656460448201527f2073616c65507269636500000000000000000000000000000000000000000000606482015260840161079a565b6001600160a01b0382166111ac5760405162461bcd60e51b815260206004820152601960248201527f455243323938313a20696e76616c696420726563656976657200000000000000604482015260640161079a565b604080518082019091526001600160a01b039092168083526bffffffffffffffffffffffff9091166020909201829052600160a01b90910217600055565b6000818152600460205260409020546001600160a01b0316610ed85760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e2049440000000000000000604482015260640161079a565b6000818152600660205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038416908117909155819061129082610af4565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000806112d583610af4565b9050806001600160a01b0316846001600160a01b0316148061131c57506001600160a01b0380821660009081526007602090815260408083209388168352929052205460ff165b806113405750836001600160a01b0316611335846106e2565b6001600160a01b0316145b949350505050565b826001600160a01b031661135b82610af4565b6001600160a01b0316146113bf5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161079a565b6001600160a01b03821661143a5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161079a565b611447838383600161198b565b826001600160a01b031661145a82610af4565b6001600160a01b0316146114be5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161079a565b6000818152600660209081526040808320805473ffffffffffffffffffffffffffffffffffffffff199081169091556001600160a01b0387811680865260058552838620805460001901905590871680865283862080546001019055868652600490945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600c546001600160a01b03163314610e655760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161079a565b61064c828260405180602001604052806000815250611997565b600c80546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b804710156116a45760405162461bcd60e51b815260206004820152602360248201527f436f6e74726163742062616c616e6365206d757374206265203e3d205f616d6f60448201527f756e740000000000000000000000000000000000000000000000000000000000606482015260840161079a565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146116f1576040519150601f19603f3d011682016040523d82523d6000602084013e6116f6565b606091505b505090508061083b5760405162461bcd60e51b815260206004820152601060248201527f5472616e73666572206661696c65642e00000000000000000000000000000000604482015260640161079a565b816001600160a01b0316836001600160a01b031614156117a95760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161079a565b6001600160a01b03838116600081815260076020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611821848484611348565b61182d84848484611a15565b610f885760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606482015260840161079a565b6060600d805461065f90612681565b606060006118b083611b6d565b600101905060008167ffffffffffffffff8111156118d0576118d061246a565b6040519080825280601f01601f1916602001820160405280156118fa576020820181803683370190505b5090508181016020015b600019017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a850494508461194057611945565b611904565b509392505050565b60006001600160e01b031982167f780e9d6300000000000000000000000000000000000000000000000000000000148061063c575061063c82611c4f565b610f8884848484611cc1565b6119a18383611e09565b6119ae6000848484611a15565b61083b5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606482015260840161079a565b60006001600160a01b0384163b15611b6257604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611a59903390899088908890600401612790565b602060405180830381600087803b158015611a7357600080fd5b505af1925050508015611aa3575060408051601f3d908101601f19168201909252611aa0918101906127cc565b60015b611b48573d808015611ad1576040519150601f19603f3d011682016040523d82523d6000602084013e611ad6565b606091505b508051611b405760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606482015260840161079a565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611340565b506001949350505050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611bb6577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310611be2576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310611c0057662386f26fc10000830492506010015b6305f5e1008310611c18576305f5e100830492506008015b6127108310611c2c57612710830492506004015b60648310611c3e576064830492506002015b600a831061063c5760010192915050565b60006001600160e01b031982167f80ac58cd000000000000000000000000000000000000000000000000000000001480611cb257506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061063c575061063c82611faf565b611ccd84848484612016565b6001811115611d445760405162461bcd60e51b815260206004820152603560248201527f455243373231456e756d657261626c653a20636f6e736563757469766520747260448201527f616e7366657273206e6f7420737570706f727465640000000000000000000000606482015260840161079a565b816001600160a01b038516611da057611d9b81600a80546000838152600b60205260408120829055600182018355919091527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80155565b611dc3565b836001600160a01b0316856001600160a01b031614611dc357611dc3858261209e565b6001600160a01b038416611ddf57611dda8161213b565b611e02565b846001600160a01b0316846001600160a01b031614611e0257611e0284826121ea565b5050505050565b6001600160a01b038216611e5f5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161079a565b6000818152600460205260409020546001600160a01b031615611ec45760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161079a565b611ed260008383600161198b565b6000818152600460205260409020546001600160a01b031615611f375760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161079a565b6001600160a01b0382166000818152600560209081526040808320805460010190558483526004909152808220805473ffffffffffffffffffffffffffffffffffffffff19168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001600160e01b031982167f2a55205a00000000000000000000000000000000000000000000000000000000148061063c57507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b031983161461063c565b6001811115610f88576001600160a01b0384161561205c576001600160a01b038416600090815260056020526040812080548392906120569084906127e9565b90915550505b6001600160a01b03831615610f88576001600160a01b03831660009081526005602052604081208054839290612093908490612729565b909155505050505050565b600060016120ab84610db9565b6120b591906127e9565b600083815260096020526040902054909150808214612108576001600160a01b03841660009081526008602090815260408083208584528252808320548484528184208190558352600990915290208190555b5060009182526009602090815260408084208490556001600160a01b039094168352600881528383209183525290812055565b600a5460009061214d906001906127e9565b6000838152600b6020526040812054600a805493945090928490811061217557612175612713565b9060005260206000200154905080600a838154811061219657612196612713565b6000918252602080832090910192909255828152600b9091526040808220849055858252812055600a8054806121ce576121ce612800565b6001900381819060005260206000200160009055905550505050565b60006121f583610db9565b6001600160a01b039093166000908152600860209081526040808320868452825280832085905593825260099052919091209190915550565b82805461223a90612681565b90600052602060002090601f01602090048101928261225c57600085556122a2565b82601f1061227557805160ff19168380011785556122a2565b828001600101855582156122a2579182015b828111156122a2578251825591602001919060010190612287565b506122ae9291506122b2565b5090565b5b808211156122ae57600081556001016122b3565b6001600160e01b031981168114610ed857600080fd5b6000602082840312156122ef57600080fd5b8135610fee816122c7565b80356001600160a01b038116811461231157600080fd5b919050565b6000806040838503121561232957600080fd5b612332836122fa565b915060208301356bffffffffffffffffffffffff8116811461235357600080fd5b809150509250929050565b60005b83811015612379578181015183820152602001612361565b83811115610f885750506000910152565b600081518084526123a281602086016020860161235e565b601f01601f19169290920160200192915050565b602081526000610fee602083018461238a565b6000602082840312156123db57600080fd5b5035919050565b600080604083850312156123f557600080fd5b6123fe836122fa565b946020939093013593505050565b60008060006060848603121561242157600080fd5b61242a846122fa565b9250612438602085016122fa565b9150604084013590509250925092565b6000806040838503121561245b57600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561249b5761249b61246a565b604051601f8501601f19908116603f011681019082821181831017156124c3576124c361246a565b816040528093508581528686860111156124dc57600080fd5b858560208301376000602087830101525050509392505050565b60006020828403121561250857600080fd5b813567ffffffffffffffff81111561251f57600080fd5b8201601f8101841361253057600080fd5b61134084823560208401612480565b60006020828403121561255157600080fd5b813560ff81168114610fee57600080fd5b60006020828403121561257457600080fd5b610fee826122fa565b8035801515811461231157600080fd5b600080604083850312156125a057600080fd5b6125a9836122fa565b91506125b76020840161257d565b90509250929050565b600080600080608085870312156125d657600080fd5b6125df856122fa565b93506125ed602086016122fa565b925060408501359150606085013567ffffffffffffffff81111561261057600080fd5b8501601f8101871361262157600080fd5b61263087823560208401612480565b91505092959194509250565b60006020828403121561264e57600080fd5b610fee8261257d565b6000806040838503121561266a57600080fd5b612673836122fa565b91506125b7602084016122fa565b600181811c9082168061269557607f821691505b602082108114156126b657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156126ec576126ec6126bc565b500290565b60008261270e57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b6000821982111561273c5761273c6126bc565b500190565b600060ff821660ff811415612758576127586126bc565b60010192915050565b6000835161277381846020880161235e565b83519083019061278781836020880161235e565b01949350505050565b60006001600160a01b038087168352808616602084015250836040830152608060608301526127c2608083018461238a565b9695505050505050565b6000602082840312156127de57600080fd5b8151610fee816122c7565b6000828210156127fb576127fb6126bc565b500390565b634e487b7160e01b600052603160045260246000fdfea26469706673582212200ba879d9c67dce5f7885e39a78e0c2f8888984ec8706255d60942946238a4f1664736f6c63430008090033'

type NFTContractBaseConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: NFTContractBaseConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class NFTContractBase__factory extends ContractFactory {
  constructor(...args: NFTContractBaseConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    maxSupply: PromiseOrValue<BigNumberish>,
    maxPublicMint: PromiseOrValue<BigNumberish>,
    pricePerToken: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTContractBase> {
    return super.deploy(
      name,
      symbol,
      maxSupply,
      maxPublicMint,
      pricePerToken,
      overrides || {}
    ) as Promise<NFTContractBase>
  }
  override getDeployTransaction(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    maxSupply: PromiseOrValue<BigNumberish>,
    maxPublicMint: PromiseOrValue<BigNumberish>,
    pricePerToken: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      maxSupply,
      maxPublicMint,
      pricePerToken,
      overrides || {}
    )
  }
  override attach(address: string): NFTContractBase {
    return super.attach(address) as NFTContractBase
  }
  override connect(signer: Signer): NFTContractBase__factory {
    return super.connect(signer) as NFTContractBase__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): NFTContractBaseInterface {
    return new utils.Interface(_abi) as NFTContractBaseInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTContractBase {
    return new Contract(address, _abi, signerOrProvider) as NFTContractBase
  }
}
